global proc shelf_Prism () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Saves the current file to a new version" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "prism_save" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "prismSave.png" 
        -image1 "prismSave.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pcore.saveScene()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Saves the current file to a new version with a comment" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "prism_commentsave" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "prismSaveComment.png" 
        -image1 "prismSaveComment.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pcore.saveWithComment()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Opens the Project Browser" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "prism_browser" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "prismBrowser.png" 
        -image1 "prismBrowser.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pcore.projectBrowser()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Opens the State Manager" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "prism_manager" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "prismStates.png" 
        -image1 "prismStates.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pcore.stateManager()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Opens the Prism settings" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "prism_settings" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "prismSettings.png" 
        -image1 "prismSettings.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "pcore.prismSettings()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Edit the references for the current scene" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Reference Editor" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "RE" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconFile.png" 
        -image1 "menuIconFile.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ReferenceEditor" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\ncmds.file( 'E:/LocalProjects/LGT.ma', reference=True )" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import maya.cmds as cmds\ncmds.file( 'E:/LocalProjects/LGT.ma', r..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "R_LGT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\ncmds.file( 'E:/LocalProjects/LGT.ma', reference=True )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\n###ACES_Colorspace_utility - 2020- MrLixm\n#FOR PERSONAL USE ONLY\n#for commercial use, please buy a commercial license.\n#Contact: lcollod@gmail.com\n\n\n\n###<ChangeLog>#####\n\n##v1.2.1\n#add: A message is now displayed if ACES is not enabled\n#fix: All tex to Acescg didn't work.\n#fix: The button to convert all the texture could result in errors if you had non-file nodes as textures in the hypershade.\n#\n\n##v1.2.2\n#change: Interface redesign\n#\n\n##v2.0\n#change: code rewrited for optimization\n#change: Interface redesigned\n#add: Option to Enable or disabled use of Ocio file.\n#add: Option to find & load the .ocio file\n#add: Option to Enable or disable the Ocio Input space Rule option\n#add: promptmenu when converting all textures to avoid mistakes.\n#add: x3 IDT options with default colorManagement\n#add: list of x4 usefull links to use ACES + YoutubePlaylist\n#add: Quick Guide to work with Aces in maya\n\n##v2.0.1\n#add/fix: When loading the config.ocio, the colorManagement in general is force enabled\n\n##v2.0.2\n#fix: folder icon doesn't exist on some machine\n\n##v2.1.0\n#add:twitter icon replace by info icon. Open an Info Window\n#change: 'Aces Links' is now named 'Aces Help' and can be minimised.(minimised by default)\n#change: Link updated for ACES v1.2\n#change: some UI updates\n\nVERSION= \"v2.1.0\"\nWINDAN= 'liamaceswind'\n\nimport maya.cmds as mc\nimport functools as func\nimport os\n\n\n#colorGlobalVARIABLES\nbgcwhited=[0.9,0.9,0.9]\nbgcwhite= [0.95,0.95,0.95]\nbgcgreylight1=[0.5,0.5,0.5]\nbgcgreyll= [0.35,0.35,0.35]\nbgcgreyl=[0.25,0.25,0.25]\nbgcgrey= [0.2,0.2,0.2]\nbgcgreyd= [0.18,0.18,0.18]\nbgcdarkl= [0.15,0.15,0.15]\nbgcgreenUVo=[0.33,0.6,0.46]\nbgcgreenUV= [0.2,0.49,0.2]\nbgcgreenUVl= [0.25,0.5,0.25]\nbgcgreenUVll= [0.3,0.5,0.3]\nbgcgreenM= [0,0.96,0.54]\nbgcgreen2= [0.08, 0.76, 0.3]\nbgcred1=[1,0.38,0.38]\nbgcred2=[0.8, 0.2, 0.25]\nbgcblue=[0.235,0.62,0.945]\nbgcblueSea=[0.1,0.4,0.5]\nbgcyellow=[1,0.83,0.44]\nbgcpurple=[0.4,0.28,0.5]\nbgcpurple2=[0.45,0.35,0.5]\nbgcpurpleR=[0.45,0.28,0.5]\nbgcpurpleF=[0.65,0.35,0.6]\n\n\n\n\n### DELETE window prefs Aces Window\nif mc.windowPref('%s' %WINDAN, query=True, exists=True):\n    mc.windowPref( '%s' %WINDAN, remove=True )\nif mc.window('%s' %WINDAN, query=True, exists=True):\n    mc.deleteUI('%s' %WINDAN, window=True)\n\n### DELETE window prefs Help Window\nif mc.windowPref('AcesQuickHelp', query=True, exists=True):\n    mc.windowPref('AcesQuickHelp', remove=True )\nif mc.window('AcesQuickHelp', query=True, exists=True):\n    mc.deleteUI('AcesQuickHelp', window=True)\n\n### DELETE window prefs Info Window\nif mc.windowPref('infoUdimWind', query=True, exists=True):\n    mc.windowPref('infoUdimWind', remove=True )\nif mc.window('infoUdimWind', query=True, exists=True):\n    mc.deleteUI('infoUdimWind', window=True)\n\n\n\n### Colorspacefunctions\n\nclass AcesFunctions:\n\n    def __init__(self):\n\n        ## ICON PATH\n        self.mayaVersion = mc.about(v=True)\n        self.userDir = mc.internalVar(userAppDir=True)\n        self.iconsPath = os.path.join(self.userDir, self.mayaVersion+'/prefs/icons/AcesUtility')\n\n        self.item_list = mc.ls( selection=True )\n        self.ocioResult= self.ocioCheck()\n        self.ocioPath= self.getOcioPath()\n\n        self.acesresult= self.acesCheck()\n        self.mAcesOn= self.acesresult\n        self.mAcesOff= not self.acesresult\n\n        self.imgTitlev=self.iconsCheck('Titlev2.0','caution')\n        self.stTitleState=self.stTitlev\n        self.imgTitleLeft=self.iconsCheck('Twitter','Bookmark')\n        self.imgYtb=self.iconsCheck('Youtube','playblast')\n\n    def iconsCheck(self,iconNameCt,iconNameNm):\n\n        iconLoc= self.iconsPath+'/Script_AcesUtility_%s.png'%iconNameCt\n        if os.path.isfile(iconLoc):\n            self.iconExist=True\n            self.imgIcon=\"%s\"%iconLoc\n            self.stTitlev='iconOnly'\n        else:\n            self.iconExist=False\n            self.imgIcon=\":/%s.png\"%iconNameNm\n            self.stTitlev='textOnly'\n\n        return self.imgIcon\n\n\n    def ocioCheck(self):\n        self.value= mc.colorManagementPrefs(q=True,cfe=False)\n        return self.value\n\n    def acesCheck(self):\n        wsname= mc.getAttr('defaultColorMgtGlobals.workingSpaceName')\n        for value in [wsname]:\n            if value=='ACES - ACEScg':\n               self.acesresult = True\n            else :\n                self.acesresult = False\n        return self.acesresult\n\n    def ocioChange(self,value):\n\n        ccOcio=not mc.colorManagementPrefs(q=True,cfe=True)\n        if value:\n            ccOcio=value\n        mc.colorManagementPrefs(e=True,cfe=ccOcio)\n        mAcesOn=ccOcio\n        mAcesOff=not ccOcio\n        if ccOcio:\n            iconCbOcio=\":/checkboxOn.png\"\n            bgcIcbOcio=bgcgreen2\n        else:\n            iconCbOcio=\":/checkboxOff.png\"\n            bgcIcbOcio=bgcred1\n\n        mc.iconTextButton(\"iconTextButtonUseOcio\",e=True,image=iconCbOcio,bgc=bgcIcbOcio)\n        self.updateAcesUi()\n\n    def ocioRule(self,ccv):\n        mc.colorManagementPrefs(e=True,ore=ccv)\n\n    def ocioRuleWind(*args):\n        mc.confirmDialog(title='OCIO Rule',message='If enabled ,a imported texture will be set automatically to the default colorspace set.   (You can set it to Utility-Raw by clicking on the right button)',defaultButton='OK',cancelButton='Cancel',dismissString='Cancel',icn=\"help\")\n\n    def ocioRuleChange(self):\n        if self.ocioCheck():\n            mc.colorManagementFileRules('Default',e=True,cs='Utility - Raw')\n            mc.colorManagementFileRules(save=True)\n            mc.colorManagementFileRules(load=True)\n        else:\n            print\"Ocio disabled, can't change Default Rule\"\n\n    def updateAcesUi(self):\n        mAcesOn=self.acesCheck()\n        mAcesOff=not self.acesCheck()\n        mc.flowLayout(\"lytFlowAcesOn\",e=True,m=mAcesOn)\n        mc.separator(\"separatorAcesOn\",e=True,m=mAcesOn)\n        mc.text(\"textColorAcesOn\",e=True,m=mAcesOn )\n        mc.text('textAcesOn',e=True,m=mAcesOn)\n\n        mc.flowLayout(\"lytFlowAcesOff\",e=True,m=mAcesOff)\n        mc.separator(\"separatorAcesOff\",e=True,m=mAcesOff)\n        mc.text(\"textColorAcesOff\",e=True,m=mAcesOff )\n        mc.text('textAcesOff',e=True,m=mAcesOff )\n        mc.iconTextButton('itbAcesOff',e=True,m=mAcesOff )\n\n    def idtUiUpdate(self):\n        valeur=mc.iconTextButton('itbIconTitle',q=True,image=True)\n        leWind=mc.window('%s' %WINDAN, q=True,le=True )\n        hWindO=mc.window('%s' %WINDAN, q=True,h=True )\n        if valeur==\":/nodeGrapherArrowDown.png\":\n            mV=False\n            iV=\":/moveUVRight.png\"\n            hLyt=33\n            hWind=hWindO-280\n        else:\n            mV=True\n            iV=\":/nodeGrapherArrowDown.png\"\n            hLyt=309\n            hWind=hWindO+280\n\n        mc.iconTextButton('itbIconTitle',e=True,image=iV)\n        mc.separator('idtSeparator1', e=True,m=mV )\n        mc.iconTextButton('idtItbIcon',e=True,m=mV )\n        mc.text('idtTextBttns',e=True,m=mV )\n        mc.separator('idtSeparator2',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns\",e=True,m=mV )\n        mc.separator('idtSeparator3',e=True,m=mV )\n        mc.text(\"textColorBttns0\",e=True,m=mV )\n        mc.iconTextButton('itbBttns0',e=True,m=mV )\n        mc.separator('idtSeparator4',e=True,m=mV )\n        mc.text(\"textColorBttns1\",e=True,m=mV )\n        mc.iconTextButton('itbBttns1',e=True,m=mV )\n        mc.separator('idtSeparator5',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutTxtBttns2\",e=True,m=mV )\n        mc.iconTextButton('itbIcon2',e=True,m=mV )\n        mc.text('textBttns2',e=True,m=mV )\n        mc.separator('idtSeparator6',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns2\",e=True,m=mV )\n        mc.separator('idtSeparator7',e=True,m=mV )\n        mc.text(\"textColorBttns2\",e=True,m=mV )\n        mc.iconTextButton('itbBttns2',e=True,m=mV )\n        mc.separator('idtSeparator8',e=True,m=mV )\n        mc.text(\"textColorBttns3\",e=True,m=mV )\n        mc.iconTextButton('itbBttns3',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns3\",e=True,m=mV )\n        mc.separator('idtSeparator9',e=True,m=mV )\n        mc.text(\"textColorBttns3\",e=True,m=mV )\n        mc.iconTextButton('itbBttns3',e=True,m=mV )\n        mc.separator('idtSeparator10',e=True,m=mV )\n        mc.text(\"textColorBttns4\",e=True,m=mV )\n        mc.iconTextButton('itbBttns4',e=True,m=mV )\n        mc.separator('idtSeparator11',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutTxtBttns32\",e=True,m=mV )\n        mc.iconTextButton('itbIcon32',e=True,m=mV )\n        mc.text('textBttns32',e=True,m=mV )\n        mc.separator('idtSeparator12',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns33\",e=True,m=mV )\n        mc.separator('idtSeparator13',e=True,m=mV )\n        mc.text(\"textColorBttns30\",e=True,m=mV )\n        mc.iconTextButton('itbBttns30',e=True,m=mV )\n        mc.separator('idtSeparator14',e=True,m=mV )\n        mc.text(\"textColorBttns31\",e=True,m=mV )\n        mc.iconTextButton('itbBttns31',e=True,m=mV )\n        mc.separator('idtSeparator15',e=True,m=mV )\n        mc.text(\"textColorBttns32\",e=True,m=mV )\n        mc.iconTextButton('itbBttns32',e=True,m=mV )\n        mc.rowColumnLayout(\"uiRowColLytSide2\", e=True,h=hLyt)\n        mc.window('%s' %WINDAN, e=True, h=hWind )\n        mc.window('%s' %WINDAN, e=True,le=leWind )\n\n    def helpUiUpdate(self,*args):\n        visState = mc.iconTextButton('itbBkmrkLinks', q=True,i=True)\n        hWindhelpO=mc.window('%s' %WINDAN, q=True,h=True )\n\n        if visState==':/nodeGrapherArrowDown.png':\n            itbImg=':/moveUVRight.png'\n            itbVis=False\n            hWindHelpN=hWindhelpO-100\n\n        elif visState==':/moveUVRight.png':\n            itbImg=':/nodeGrapherArrowDown.png'\n            itbVis=True\n            hWindHelpN=hWindhelpO+100\n            hLyt = 150\n\n        mc.rowColumnLayout(\"rclUiGlobalHelps\", e=True, vis=itbVis,m=itbVis )\n        mc.iconTextButton('itbBkmrkLinks', e=True,i=itbImg)\n        mc.window('%s' %WINDAN, e=True,h=hWindHelpN )\n\n\n    def getOcioPath(self):\n        self.ocioPath=mc.colorManagementPrefs(q=True,cfp=True)\n        return self.ocioPath\n\n    def fileDialogOcio(self):\n        self.ocioFile=mc.fileDialog2(fm=1)\n        mc.textField(\"textFieldOcio\",e=True,tx=self.ocioFile[0])\n\n        return self.ocioFile\n\n    def validateOcio(self,*args):\n        ocioPath=mc.textField(\"textFieldOcio\",q=True,tx=True)\n        mc.colorManagementPrefs(e=True,cme=True)\n        mc.colorManagementPrefs(e=True,cfp=ocioPath)\n        self.ocioChange(True)\n\n\n    def allTexCs(self,value):\n        tex_list= mc.ls(type='file')\n        if value==0:\n            text='ACEScg'\n        if value==1:\n            text='Utility-Raw'\n        if value==2:\n            text='Raw'\n        promptResult = mc.confirmDialog(title='Convert ALL textures',message='You are about to convert ALL the texture of your maya file to %s'%text,button=['OK', 'Cancel'],defaultButton='OK',cancelButton='Cancel',dismissString='Cancel',icn=\"warning\")\n        if promptResult=='OK':\n            for textures in tex_list:\n                if value==0:\n                    mc.setAttr('%s.colorSpace' %textures, \"ACES - ACEScg\", type=\"string\")\n                if value==1:\n                    mc.setAttr('%s.colorSpace' %textures, \"Utility - Raw\", type=\"string\")\n                if value==2:\n                    mc.setAttr('%s.colorSpace' %textures, \"Raw\", type=\"string\")\n        else :\n            print \"Conversion aborted by user\"\n\n    def csTex(self,value):\n        item_list = mc.ls( selection=True )\n        for things in item_list:\n            if value==0:\n                mc.setAttr('%s.colorSpace' %things, \"ACES - ACEScg\", type=\"string\")\n            if value==1:\n                mc.setAttr('%s.colorSpace' %things, \"Utility - Raw\", type=\"string\")\n            if value==2:\n                mc.setAttr('%s.colorSpace' %things, \"Utility - Linear - sRGB\", type=\"string\")\n            if value==3:\n                mc.setAttr('%s.colorSpace' %things, \"Utility - sRGB - Texture\", type=\"string\")\n            if value==4:\n                mc.setAttr('%s.colorSpace' %things, \"sRGB\", type=\"string\")\n            if value==5:\n                mc.setAttr('%s.colorSpace' %things, \"Raw\", type=\"string\")\n            if value==6:\n                mc.setAttr('%s.colorSpace' %things, \"Output - sRGB\", type=\"string\")\n            if value==7:\n                mc.setAttr('%s.colorSpace' %things, \"Raw\", type=\"string\")\n\n\n    def hyperLink(self,value):\n        if value==0:\n            os.startfile('https://github.com/colour-science/OpenColorIO-Configs/archive/feature/aces-1.2-config.zip')\n        if value==1:\n            os.startfile('https://acescentral.com/faq')\n        if value==2:\n            os.startfile('https://chrisbrejon.com/cg-cinematography/chapter-1-5-academy-color-encoding-system-aces/')\n        if value==3:\n            os.startfile('https://z-fx.nl/ColorspACES.pdf')\n        if value==4:\n            os.startfile('https://gumroad.com/liam_collod')\n        if value==5:\n            os.startfile('https://www.youtube.com/watch?v=ctCL0OhCGjk&list=PLK1rYEsZB6pu138crJeB4X3m94UCbtjuX')\n        if value==6:\n            os.startfile('https://twitter.com/MrLixm')\n        if value==7:\n            os.startfile('https://www.artstation.com/monsieur_lixm')\n\n    def helpWind(*args):\n        winshow=HelpUI()\n        winshow.showWindHelp()\n\n    def infoWind(*args):\n        winshow=InfoUI()\n        winshow.showWindInfo()\n\n\n    ###Close window function\n    def closeWind(*args):\n        mc.deleteUI('%s' %WINDAN, window=True)\n        if mc.window('infoUdimWind', query=True, exists=True):\n            mc.deleteUI('infoUdimWind', window=True)\n\n\n\n\n### UI FUNCTION\n\n\nclass AcesUI:\n\n    def __init__(self):\n\n        af=AcesFunctions()\n\n        cbRv=mc.colorManagementPrefs(q=True,ore=True)\n\n        if af.ocioResult==True:\n            cbv=True\n            iconCbOcio=\":/checkboxOn.png\"\n            bgcIcbOcio=bgcgreen2\n        else:\n            cbv=False\n            iconCbOcio=\":/checkboxOff.png\"\n            bgcIcbOcio=bgcred1\n\n        ####UI STYLE#####\n        windbgcR,windbgcG,windbgcB=0.2,0.2,0.2 #color of the background of the window\n        wGlobal=353\n        #BUTTON HEIGHT weight\n        hv=15\n        wv=30\n        #icontextbutton\n        hiv=25\n        wiv=25\n        ##--------------\n\n        self.windowv = mc.window('%s' %WINDAN, title=\" \", widthHeight=(wGlobal, 725), backgroundColor=(windbgcR,windbgcG,windbgcB), le=650,te=150,tbm=False,s=False)\n\n        mc.columnLayout( columnAttach=('both', 0), rowSpacing=10, columnWidth=wGlobal )\n        mc.text(label= \"   \", h = 3 , rs=True, backgroundColor=bgcblue  )\n        mc.setParent( '..' )\n\n        mc.rowColumnLayout(\"uiRowColLytSide1\", nc=4)\n        mc.separator( w=5, style='none' )\n        mc.iconTextButton(label= \"   \", w = 3 , bgc=bgcgreyl )\n        mc.separator( w=4, style='none' )\n\n        #fourth column\n        mc.rowColumnLayout(\"uiTopRowGlobal\", adj=True )\n\n\n        mc.rowLayout(\"rowlytName\",bgc=bgcblue,nc=4,cl4=[\"left\",\"left\",\"left\",\"left\"],h=29 )\n        mc.separator( w=2, style='none' )\n        mc.iconTextButton(st='iconOnly',label= \"   \", h = 20,w=20 ,i=':/info.png',command=af.infoWind )\n        mc.iconTextButton(st=af.stTitleState,label=' ACES Colorspace Utility %s' %VERSION, h = 22,w = 276, bgc=[0.204, 0.204, 0.21], al='left', fn='boldLabelFont' ,ebg=False,hlc=bgcgreen2,command=func.partial(af.hyperLink,4),i=af.imgTitlev,mw=5)\n        mc.iconTextButton(st='iconOnly',label= \"   \", h = 25,w=25 ,command=af.closeWind, backgroundColor=(bgcwhited),image=\":/error.png\",ebg=False  )\n        mc.setParent('..')\n\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2,w=170 , backgroundColor=(bgcwhited)  )\n        mc.separator( height=15, style='none' )\n\n\n    \t## Is aces enabled ? ##\n        # ACES ON UI #\n        self.uiAcesOn1=mc.flowLayout(\"lytFlowAcesOn\",m=af.mAcesOn)\n        self.uiAcesOn2=mc.separator(\"separatorAcesOn\", w=4,h=15, style='none' ,m=af.mAcesOn)\n        self.uiAcesOn3=mc.text(\"textColorAcesOn\",label= \"   \", w = 5 , rs=False, backgroundColor=(0.08, 0.76, 0.3) ,m=af.mAcesOn )\n        self.uiAcesOn4=mc.text('textAcesOn',label= '  ACES is enabled', al='left', fn='obliqueLabelFont' , rs=False ,m=af.mAcesOn)\n        mc.setParent( '..' )\n\n        # ACES OFF UI #\n        htxtAcesOff=15\n        self.uiAcesOff1=mc.flowLayout(\"lytFlowAcesOff\",m=af.mAcesOff)\n        self.uiAcesOff2=mc.separator(\"separatorAcesOff\", w=4, style='none' ,m=af.mAcesOff)\n        self.uiAcesOff3=mc.text(\"textColorAcesOff\",label= \"   \", w = 5,h=htxtAcesOff , rs=False, backgroundColor=(bgcred2) ,m=af.mAcesOff)\n        self.uiAcesOff4=mc.text('textAcesOff',label= \"   ACES is not enabled \",h=htxtAcesOff,fn='obliqueLabelFont', al='left' , rs=False, backgroundColor=(0.3, 0.3, 0.3) ,m=af.mAcesOff,ebg=False )\n        self.uiAcesOff5=mc.iconTextButton('itbAcesOff',st='iconOnly', h = 13,w=13 , backgroundColor=(bgcgrey),image=\":/caution.png\",ebg=True,m=af.mAcesOff  )\n        mc.setParent( '..' )\n\n\n\n        mc.separator( height=20, style='none' )\n\n        #########################\n        # CheckBox OCIO #\n        mc.rowLayout(\"rowlytOcio\",bgc=(bgcgreyl),nc=3,cl3=[\"center\",\"center\",\"left\"])\n        mc.separator( w=2,h=25, style='none' )\n        mc.iconTextButton(\"iconTextButtonUseOcio\",st='iconOnly',label= \"   \", h = 20,w=20 ,command=func.partial(af.ocioChange,False), backgroundColor=(bgcIcbOcio),image=iconCbOcio,ebg=True  )\n        mc.text('textUseOcio',label= \" USE OCIO\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator( height=8, style='none' )\n        #################################\n\n\n        ## OCIO LOADING UI ##\n        mc.rowColumnLayout(\"rowCLOcio\", nc=3)\n        mc.separator( w=2, style='none' )\n        mc.text(label= \"   \", w = 2 , rs=False, backgroundColor=(bgcwhited)  )\n        # Third column\n        mc.rowColumnLayout(\"uiTopRowGlobal\", adj=True )\n\n        mc.rowLayout(\"rowlytField\",nc=2,cl2=[\"center\",\"center\"],ct2=[\"both\",\"left\"],co2=[5,0])\n        mc.iconTextButton('itbFolder',st='iconOnly', h = 20,w=20 ,command=af.fileDialogOcio, backgroundColor=(bgcgrey),image=\":/folder-open.png\",ebg=True )\n        ocioPathField = mc.textField(\"textFieldOcio\", ann=\"path of the .ocio\" , font = \"obliqueLabelFont\", h= 20,w= 280,bgc=(bgcgreyd),tx=af.ocioPath)\n        mc.setParent( '..' )\n\n        mc.rowLayout(\"rowlytOcio\",bgc=(bgcgreyl),nc=2,cl2=[\"left\",\"right\"],cw2=[229,50],ebg=False)\n\n        mc.rowColumnLayout(\"uiTopRowGlobal\", adj=True )\n        mc.text('textOcioPath',label= \"   1.Set the path to config.ocio\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.text('textOcioPathVal',label= \"   2.Load after selecting the config.ocio\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.button(label='LOAD', h =25,w = 80, bgc=(bgcgreyd),command=af.validateOcio)\n        mc.setParent( '..' )\n\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n\n\n        ######################\n        # CheckBox OCIO RULE #\n        mc.separator( height=12, style='none' )\n        mc.rowLayout(\"rowlytOcioRule\",bgc=(bgcgreyl),nc=5,cl5=[\"center\",\"center\",\"right\",\"center\",\"center\"],ct5=[\"both\",\"both\",\"both\",\"right\",\"right\"],co5=[0,0,12,0,0])\n        mc.separator( w=2,h=25, style='none' )\n        mc.checkBox(\"checkBoxOcioRule\", label='OCIO Rule',v=cbRv,cc=af.ocioRule )\n        mc.iconTextButton('itbHelp',st='iconOnly', h = 20,w=20 ,ann='If enabled , a texture will be set to the default colorspace you choose', backgroundColor=(bgcgrey),image=\":/help.png\",ebg=False,command=af.ocioRuleWind )\n        mc.iconTextButton('itbOrtxt',st='textOnly', h = 20,w=110 ,label='Set Default OcioRule to:', backgroundColor=(bgcgrey),ebg=False,fn=\"tinyBoldLabelFont\" )\n        mc.iconTextButton('itbOrtxtCs',st='textOnly', h = 18,w=80 ,label='Utility - Raw',command=af.ocioRuleChange, backgroundColor=(bgcgreyd),ebg=True,fn=\"tinyBoldLabelFont\" )\n\n        mc.setParent( '..' )\n\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2,w=150 , backgroundColor=(bgcblue)  )\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n        mc.separator( w=8, style='none' )\n\n\n\n\n\n\n\n\n############################################################################################################\n        ## SEPARATOR WHITE ##\n\n        mc.rowColumnLayout(\"uiRowColLytSide2\", nc=3,h=308)\n        mc.separator( w=2, style='none' )\n        mc.text(\"idtTxtLineSide\",label= \"   \", w = 2 , rs=False, backgroundColor=(bgcgreyl)  )\n        ##################\n        ## BUTTONS ##\n        ##################\n        mc.rowColumnLayout(\"uiTopRowGlobalButtons\", adj=True )\n\n\n\n        mc.rowColumnLayout(\"uiRowColLytTitle\", nc=2)\n        mc.text(label= \"   \",h=30, w = 4 , rs=False, backgroundColor=(bgcblue)  )\n        mc.rowLayout(\"rowlytTitle\",bgc=(bgcdarkl),nc=2,cl2=[\"left\",\"left\"],h=30)\n        mc.iconTextButton('itbIconTitle',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/nodeGrapherArrowDown.png\",ebg=False,command=af.idtUiUpdate,ann=\"Open/Close Menu\")\n        mc.text('textTitleFile',label=\"CHANGE FILES NODE COLORSPACE (IDT)\",fn='boldLabelFont',w=wGlobal-43,al=\"left\")\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n\n        mc.separator('idtSeparator1', h=15, style='none' )\n\n\n        # UI STYLE #\n        wSepLnk=2\n        hBttnsCs=40\n        stItbCs=\"iconAndTextCentered\" #iconAndTextCentered\n        alItbCs=\"left\"\n        imgItbCs=\":/\"#\":/teUnexpandableRowBackground.png\"\n        loItbCs=5\n        ebgItbCs=False\n        bgcTxtCs=bgcpurple\n\n        #################\n        # BUTTONS ROW 1 #\n        #################\n        mc.flowLayout(\"idtFlowLayoutTxtBttns\",h=20)\n        mc.iconTextButton('idtItbIcon',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/out_displayLayer.png\",ebg=True)\n        mc.text('idtTextBttns',label= \"Convert ALL the files nodes:\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator2', h=3, style='none' )\n\n        mc.flowLayout(\"flowLayoutBttns\")\n        mc.separator('idtSeparator3', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns0\",label= \" \", w = 3,h=hBttnsCs-5, rs=False, backgroundColor=(bgcred1))\n        mc.iconTextButton('itbBttns0',st=stItbCs,label='  ALL ACEScg',fn='smallBoldLabelFont', h = hBttnsCs-5,w=150 ,command=func.partial(af.allTexCs,0), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator4', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns1\",label= \" \", w = 3,h=hBttnsCs-5, rs=False, backgroundColor=(bgcred1))\n        mc.iconTextButton('itbBttns1',st=stItbCs,label='  ALL Utility-Raw',fn='smallBoldLabelFont', h = hBttnsCs-5,w=150 ,command=func.partial(af.allTexCs,1), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator5', h=5, style='none' )\n\n\n\n        ###################\n        # BUTTONS ROW 2.1 #\n        ###################\n        mc.flowLayout(\"flowLayoutTxtBttns2\",h=20)\n        mc.iconTextButton('itbIcon2',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/imageDisplay.png\",ebg=True)\n        mc.text('textBttns2',label= \"Convert the selected files nodes:\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator6', h=3, style='none' )\n\n        mc.flowLayout(\"flowLayoutBttns2\")\n        mc.separator('idtSeparator7', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns2\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcpurpleF))\n        mc.iconTextButton('itbBttns2',st=stItbCs,label='  ACEScg',fn='smallBoldLabelFont', h = hBttnsCs,w=120 ,command=func.partial(af.csTex,0), backgroundColor=(bgcpurple),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator8', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns3\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcyellow))\n        mc.iconTextButton('itbBttns3',st=stItbCs,label='  Utility-Raw',fn='smallBoldLabelFont', h = hBttnsCs,w=100 ,command=func.partial(af.csTex,1), backgroundColor=(bgcpurple),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator9v2', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns3v2\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcgreenUVo))\n        mc.iconTextButton('itbBttns3v2',st=stItbCs,label='  Output sRGB',fn='smallBoldLabelFont', h = hBttnsCs,w=100 ,command=func.partial(af.csTex,6), backgroundColor=(bgcpurple2),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparatortest',h=2, style='none' )#TEST SEPRATOR\n\n        # BUTTONS ROW 2.2 #\n        mc.flowLayout(\"flowLayoutBttns3\")\n        mc.separator('idtSeparator9', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns3\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcgreenUVo))\n        mc.iconTextButton('itbBttns3',st=stItbCs,label='  Utility-Linear-sRGB',fn='smallBoldLabelFont', h = hBttnsCs,w=120 ,command=func.partial(af.csTex,2), backgroundColor=(bgcpurple2),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator10', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns4\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcgreenUVo))\n        mc.iconTextButton('itbBttns4',st=stItbCs,label='  Utility-sRGB-Texture',fn='smallBoldLabelFont', h = hBttnsCs,w=150 ,command=func.partial(af.csTex,3), backgroundColor=(bgcpurple2),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator11', h=20, style='none' )\n\n        #################\n        # BUTTONS ROW 3 #\n        #################\n        mc.flowLayout(\"flowLayoutTxtBttns32\")\n        mc.iconTextButton('itbIcon32',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/out_file.png\",ebg=True)\n        mc.text('textBttns32',label= \"Default colorManagement Options\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator12', h=5, style='none' )\n\n        mc.flowLayout(\"flowLayoutBttns33\")\n        mc.separator('idtSeparator13', w=wSepLnk,h=hBttnsCs-20, style='none' )\n        mc.text(\"textColorBttns30\",label= \" \", w = 3,h=hBttnsCs-20, rs=False, backgroundColor=(bgcblueSea))\n        mc.iconTextButton('itbBttns30',st=stItbCs,label='  ALL to Raw',fn='smallBoldLabelFont', h = hBttnsCs-20,w=100 ,command=func.partial(af.allTexCs,2), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator14', w=wSepLnk, style='none' )\n        mc.text(\"textColorBttns31\",label= \" \", w = 3,h=hBttnsCs-20, rs=False, backgroundColor=(bgcblueSea))\n        mc.iconTextButton('itbBttns31',st=stItbCs,label='  sRGB',fn='smallBoldLabelFont', h = hBttnsCs-20,w=100 ,command=func.partial(af.csTex,4), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator15', w=wSepLnk,h=hBttnsCs-20, style='none' )\n        mc.text(\"textColorBttns32\",label= \" \", w = 3,h=hBttnsCs-20, rs=False, backgroundColor=(bgcblueSea))\n        mc.iconTextButton('itbBttns32',st=stItbCs,label='  Raw',fn='smallBoldLabelFont', h = hBttnsCs-20,w=80 ,command=func.partial(af.csTex,5), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.setParent( '..' )\n\n\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n\n\n\n##########################################################################################\n        ##################\n        ## USEFUL LINKS ##\n        ##################\n\n        stItbLink=\"iconAndTextHorizontal\"\n        imgItbLink=\":/out_genericConstraint.png\"\n\n        mc.rowColumnLayout(\"uiTopRowGlobalLinks\", adj=True )\n        mc.separator( h=15, style='none' )\n\n        mc.flowLayout(\"flowLayoutTxtLinks\",h=25,bgc=bgcgreyl)\n        mc.text(\"textColorLinks0\",label= \" \", w = 3,h=25, rs=False, bgc=bgcblue)\n        mc.iconTextButton('itbBkmrkLinks',st='iconOnly', h = 25,w=20 ,image=\":/nodeGrapherArrowDown.png\",c=af.helpUiUpdate)\n        mc.iconTextButton('textUsflLinks',st='textOnly',label= \"ACES HELP\",h=25,fn='smallBoldLabelFont',c=af.helpUiUpdate)\n        mc.setParent( '..' )\n\n        wSepLnk=2\n        mc.separator( h=5, style='none' )\n        mc.rowColumnLayout(\"rclUiGlobalHelps\", adj=True )\n\n        # LINKS ROW 1 #\n\n\n        mc.flowLayout(\"flowLayoutLinks\")\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks0\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreen2))\n        mc.iconTextButton('itbAcesLink',st=stItbLink,label='DOWNLOAD ACESv1.2 ',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,0), backgroundColor=(bgcpurpleR),ebg=False,image=imgItbLink )\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks1\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreyl))\n        mc.iconTextButton('itbAcesLink2',st=stItbLink,label='ACES CENTRAL FAQ',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,1), backgroundColor=(bgcpurple),ebg=False,image=imgItbLink)\n        mc.setParent( '..' )\n\n        mc.separator(h=3,style='none')\n\n\n        # LINKS ROW 2 #\n        mc.flowLayout(\"flowLayoutLinks2\")\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks2\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreyl))\n        mc.iconTextButton('itbAcesLink2.1',st=stItbLink,label='Chris Brejon Book',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,2), backgroundColor=(bgcpurple2),ebg=False,image=imgItbLink)\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks3\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreyl))\n        mc.iconTextButton('itbAcesLink2.2',st=stItbLink,label='W.Zwarthoed ACES PDF',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,3), backgroundColor=(bgcpurple2),ebg=False,image=imgItbLink)\n        mc.setParent( '..' )\n\n        mc.separator( h=5, style='none' )\n\n        #LINKS ROW 3 #\n        mc.rowLayout(\"flowLayoutLinks3\",nc=6,bgc=bgcgreyl)\n        mc.separator( w=1,h=25, style='none' )\n        mc.text(\"textColorLinks3\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcred2))\n        mc.iconTextButton('itbAcesLink3',st=stItbLink,label='Quick ACES Help',fn='smallBoldLabelFont', h = 25,w=150 ,command=af.helpWind, backgroundColor=(bgcpurple2),ebg=False,image=\":/help.png\")\n        mc.separator( w=1,h=25, style='none' )\n        mc.text(\"textColorLinks4\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcred2))\n        mc.iconTextButton('itbAcesLink4',st=stItbLink,label='Youtube ACES Tuto',fn='smallBoldLabelFont', h = 30,w=150 ,command=func.partial(af.hyperLink,5), backgroundColor=(bgcpurple2),ebg=False,image=af.imgYtb)\n        mc.setParent( '..' )\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 4,w=150 , backgroundColor=(bgcblue)  )\n\n\n        mc.setParent( '..' )#END rclUiGlobalLinks\n        mc.setParent('..')\n\n        mc.setParent('..')\n\n\n        af.idtUiUpdate()\n        # af.helpUiUpdate()\n\n\n    def showWind(self):\n        mc.showWindow(self.windowv)\n\nclass HelpUI:\n    def __init__(self):\n\n        if mc.windowPref('AcesQuickHelp', query=True, exists=True):\n            mc.windowPref('AcesQuickHelp', remove=True )\n        if mc.window('AcesQuickHelp', query=True, exists=True):\n            mc.deleteUI('AcesQuickHelp', window=True)\n\n\n        windbgcR,windbgcG,windbgcB=0.2,0.2,0.2 #color of the background of the window\n\n        self.windHelp = mc.window('AcesQuickHelp', title=\" \", widthHeight=(500, 760), backgroundColor=(windbgcR,windbgcG,windbgcB), le=750,te=25,s=True)\n\n        mc.rowColumnLayout(\"uiHelpRclGlobal\", adj=True )\n        mc.separator( h=5, style='none' )\n\n        mc.rowColumnLayout(\"uiHelpRclSide1\", nc=4)\n        mc.separator( w=5, style='none' )\n        mc.text(label= \"   \", w = 2 , rs=False, backgroundColor=(bgcblue)  )\n        mc.separator( w=5, style='none' )\n\n        mc.rowColumnLayout(\"uiHelpRclInside\", adj=True ) #third column\n\n        hTitle=30\n        mc.flowLayout(\"uiHelpFlowLayoutTop\")\n        mc.text(\"textColorAcesOff\",label= \"   \", w = 5,h=hTitle, bgc=(bgcblue))\n        mc.iconTextButton(label=\" QUICK ACES HELP GUIDE   \",fn=\"boldLabelFont\",al=\"left\",h=hTitle,bgc=bgcgreyl,st=\"iconAndTextHorizontal\",i=\":/info.png\")\n        mc.setParent('..')\n\n        hSepTxt=5 #hauteur interligne\n        mc.separator( h=10, style='none' )\n        mc.text(label=\"Which Colorspace to Choose ?\",fn=\"boldLabelFont\",al=\"left\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(label=\"Is your texture a 'Color'Map ? (Albedo/BaseColor/Translucency/SubsurfaceColor/...)\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.rowColumnLayout(\"uiHelpRclColor\", adj=True )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Is your texture in a linear format (.exr,...)?\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to Utility - Linear - sRGB\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Is your texture in a 8/16bit format (.jpg,.png,.tiff,...)?\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to Utility - sRGB - Texture\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.setParent('..') #End\n        mc.setParent('..') #End\n\n\n\n        ################### DATA\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"Is your texture a 'Data'Map ? (Roughness,Normal,Bump,Displacement,Specular,...)\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to Utility - Raw\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.setParent('..') #End\n\n        ################### HDRI\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"Is your texture a HDRI (.hdr,.exr)\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.rowColumnLayout(\"uiHelpRclHdri\", adj=True )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Your HDRI has to be converted to ACEScg if you want it displayed correctly\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Use Nuke,Natron,Houdini,... to convert it then set it to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/saveGeneric.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"You can't convert it ?:\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Then set it to Utility - Raw\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/out_envBall.png\")\n        mc.setParent('..') #End\n        mc.setParent('..') #End\n\n\n        ################### ACES\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"Has your texture already been converted to ACEScg ?\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.iconTextButton(label=\"     (or you worked in ACEScg when creating them(ex:Mari))\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.setParent('..') #End\n\n        ################### oUTPU Srgb\n\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"What is Output - sRGB for ?\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.separator( w=15, style='none' )\n        mc.rowColumnLayout(nr=2)\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Using Utility-sRGB-Texture as an IDT will darken your texture (this is a normal behavior)\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      If you really want to preserve the color of your original of your file you can use this IDT\",fn=\"obliqueLabelFont\",al=\"left\")\n\n        mc.setParent('..') #End\n\n        ################### REDSHIFT\n\n        mc.separator( h=20, style='none' )\n        mc.iconTextButton(st='iconAndTextHorizontal',label=\"Are you using Redshift to render ?\",fn=\"boldLabelFont\",al=\"left\",i=\":/rvRedChannel\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(label=\"Redshift doesn't fully support Ocio, changing colorspace on nodes will not work\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/info.png\")\n        mc.separator( h=hSepTxt, style='none' )\n\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      So you have to convert your textures to ACEScg before in Nuke,Natron,...\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_norgie_close.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"     Albedo/BaseColor/Translucency/SubsurfaceColor/... to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"     NormalMap don't have to be converted if you use the RS NormalMap node \",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"     Greyscale/Data maps (roughness,metalness,...) can be converted whether or not to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n\n\n\n\n\n\n\n\n        mc.setParent('..') #End rowColumnLayout\"uiHelpRclInside\" adj=True\n\n        mc.setParent('..') #End rowColumnLayout\"uiHelpRclSide1\" nc=3\n        mc.setParent('..')\n\n    def showWindHelp(self):\n        mc.showWindow(self.windHelp)\n\nclass InfoUI:\n    def __init__(self):\n\n        if mc.windowPref('infoUdimWind', query=True, exists=True):\n            mc.windowPref('infoUdimWind', remove=True )\n        if mc.window('infoUdimWind', query=True, exists=True):\n            mc.deleteUI('infoUdimWind', window=True)\n\n        af = AcesFunctions()\n\n        windbgc=0.2,0.2,0.2 #color of the background of the window\n\n        self.windInfo = mc.window('infoUdimWind', title=\"Info\", widthHeight=(290, 200), backgroundColor=windbgc, tlc=[250,450],te=25,s=True,mnb=False,mxb=False,i=False)\n\n\n        mc.rowColumnLayout(\"rclInfoGlobal\", adj=True)\n\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2, backgroundColor=bgcgreenM  )\n        mc.separator( h=15, style='none' )\n        mc.text(l='<font color=#00f58a><h3>This tool was made by LiamCollod<h3></font>',h=15)\n        mc.text(l='<font <h5>mail pro: <i>lcollod@gmail.com<i><h5></font>',h=35)\n\n\n        mc.rowColumnLayout(\"rclInfoSep\", nc=3)\n        mc.separator( w=10, style='none' )\n        mc.iconTextButton(st='iconOnly',bgc=bgcwhite,w=3)\n\n        mc.rowColumnLayout(\"rclInfo2ndCol\", nc=1,cal=[1,'left'])\n        mc.text(label=' > The IDT functions were mainly made for Arnold',fn='smallBoldLabelFont',h=16)\n        mc.text(label=\"    as REDSHIFT doesn't support file nodes IDT\",fn='smallBoldLabelFont',h=16)\n        # mc.text(label=' > The script can take some time if your scene is big',fn='smallBoldLabelFont',h=16)\n        mc.setParent('..')\n        mc.setParent('..')\n\n        mc.separator( h=5, style='none' )\n\n        mc.rowColumnLayout(\"rclInfoSep2\", nc=3)\n        mc.separator( w=10, style='none' )\n        mc.iconTextButton(st='iconOnly',bgc=bgcwhite,w=3)\n\n        mc.rowColumnLayout(\"rclInfo2ndCol2\", adj=True)\n        stItbLink=\"iconAndTextHorizontal\"\n        imgItbLink=\":/out_genericConstraint.png\"\n        mc.iconTextButton(st=stItbLink,label='GUMROAD LINK',fn='smallBoldLabelFont',i=imgItbLink,c=func.partial(af.hyperLink,4))\n        mc.iconTextButton(st=stItbLink,label='TWITTER LINK',fn='smallBoldLabelFont',i=imgItbLink,c=func.partial(af.hyperLink,6))\n        mc.iconTextButton(st=stItbLink,label='ARTSTATION LINK',fn='smallBoldLabelFont',i=imgItbLink,c=func.partial(af.hyperLink,7))\n        mc.setParent('..')\n\n\n        mc.setParent('..')\n        mc.text(l='<font <h5>You find a bug ? Submit it to <i>monsieurlixm@gmail.com<i><h5></font>',h=35)\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2, backgroundColor=bgcwhite  )\n\n        mc.setParent('..')\n\n    def showWindInfo(self,*args):\n        mc.showWindow(self.windInfo)\n\n\n\n\nwinshow= AcesUI()\nwinshow.showWind()\n\naftmp=AcesFunctions()\naftmp.helpUiUpdate()\n\n\n########END CODE\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\n###ACES_Colorspace_utility - 2020- MrLixm\n#FOR PERSONAL USE ONL..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ACES" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\n###ACES_Colorspace_utility - 2020- MrLixm\n#FOR PERSONAL USE ONLY\n#for commercial use, please buy a commercial license.\n#Contact: lcollod@gmail.com\n\n\n\n###<ChangeLog>#####\n\n##v1.2.1\n#add: A message is now displayed if ACES is not enabled\n#fix: All tex to Acescg didn't work.\n#fix: The button to convert all the texture could result in errors if you had non-file nodes as textures in the hypershade.\n#\n\n##v1.2.2\n#change: Interface redesign\n#\n\n##v2.0\n#change: code rewrited for optimization\n#change: Interface redesigned\n#add: Option to Enable or disabled use of Ocio file.\n#add: Option to find & load the .ocio file\n#add: Option to Enable or disable the Ocio Input space Rule option\n#add: promptmenu when converting all textures to avoid mistakes.\n#add: x3 IDT options with default colorManagement\n#add: list of x4 usefull links to use ACES + YoutubePlaylist\n#add: Quick Guide to work with Aces in maya\n\n##v2.0.1\n#add/fix: When loading the config.ocio, the colorManagement in general is force enabled\n\n##v2.0.2\n#fix: folder icon doesn't exist on some machine\n\n##v2.1.0\n#add:twitter icon replace by info icon. Open an Info Window\n#change: 'Aces Links' is now named 'Aces Help' and can be minimised.(minimised by default)\n#change: Link updated for ACES v1.2\n#change: some UI updates\n\nVERSION= \"v2.1.0\"\nWINDAN= 'liamaceswind'\n\nimport maya.cmds as mc\nimport functools as func\nimport os\n\n\n#colorGlobalVARIABLES\nbgcwhited=[0.9,0.9,0.9]\nbgcwhite= [0.95,0.95,0.95]\nbgcgreylight1=[0.5,0.5,0.5]\nbgcgreyll= [0.35,0.35,0.35]\nbgcgreyl=[0.25,0.25,0.25]\nbgcgrey= [0.2,0.2,0.2]\nbgcgreyd= [0.18,0.18,0.18]\nbgcdarkl= [0.15,0.15,0.15]\nbgcgreenUVo=[0.33,0.6,0.46]\nbgcgreenUV= [0.2,0.49,0.2]\nbgcgreenUVl= [0.25,0.5,0.25]\nbgcgreenUVll= [0.3,0.5,0.3]\nbgcgreenM= [0,0.96,0.54]\nbgcgreen2= [0.08, 0.76, 0.3]\nbgcred1=[1,0.38,0.38]\nbgcred2=[0.8, 0.2, 0.25]\nbgcblue=[0.235,0.62,0.945]\nbgcblueSea=[0.1,0.4,0.5]\nbgcyellow=[1,0.83,0.44]\nbgcpurple=[0.4,0.28,0.5]\nbgcpurple2=[0.45,0.35,0.5]\nbgcpurpleR=[0.45,0.28,0.5]\nbgcpurpleF=[0.65,0.35,0.6]\n\n\n\n\n### DELETE window prefs Aces Window\nif mc.windowPref('%s' %WINDAN, query=True, exists=True):\n    mc.windowPref( '%s' %WINDAN, remove=True )\nif mc.window('%s' %WINDAN, query=True, exists=True):\n    mc.deleteUI('%s' %WINDAN, window=True)\n\n### DELETE window prefs Help Window\nif mc.windowPref('AcesQuickHelp', query=True, exists=True):\n    mc.windowPref('AcesQuickHelp', remove=True )\nif mc.window('AcesQuickHelp', query=True, exists=True):\n    mc.deleteUI('AcesQuickHelp', window=True)\n\n### DELETE window prefs Info Window\nif mc.windowPref('infoUdimWind', query=True, exists=True):\n    mc.windowPref('infoUdimWind', remove=True )\nif mc.window('infoUdimWind', query=True, exists=True):\n    mc.deleteUI('infoUdimWind', window=True)\n\n\n\n### Colorspacefunctions\n\nclass AcesFunctions:\n\n    def __init__(self):\n\n        ## ICON PATH\n        self.mayaVersion = mc.about(v=True)\n        self.userDir = mc.internalVar(userAppDir=True)\n        self.iconsPath = os.path.join(self.userDir, self.mayaVersion+'/prefs/icons/AcesUtility')\n\n        self.item_list = mc.ls( selection=True )\n        self.ocioResult= self.ocioCheck()\n        self.ocioPath= self.getOcioPath()\n\n        self.acesresult= self.acesCheck()\n        self.mAcesOn= self.acesresult\n        self.mAcesOff= not self.acesresult\n\n        self.imgTitlev=self.iconsCheck('Titlev2.0','caution')\n        self.stTitleState=self.stTitlev\n        self.imgTitleLeft=self.iconsCheck('Twitter','Bookmark')\n        self.imgYtb=self.iconsCheck('Youtube','playblast')\n\n    def iconsCheck(self,iconNameCt,iconNameNm):\n\n        iconLoc= self.iconsPath+'/Script_AcesUtility_%s.png'%iconNameCt\n        if os.path.isfile(iconLoc):\n            self.iconExist=True\n            self.imgIcon=\"%s\"%iconLoc\n            self.stTitlev='iconOnly'\n        else:\n            self.iconExist=False\n            self.imgIcon=\":/%s.png\"%iconNameNm\n            self.stTitlev='textOnly'\n\n        return self.imgIcon\n\n\n    def ocioCheck(self):\n        self.value= mc.colorManagementPrefs(q=True,cfe=False)\n        return self.value\n\n    def acesCheck(self):\n        wsname= mc.getAttr('defaultColorMgtGlobals.workingSpaceName')\n        for value in [wsname]:\n            if value=='ACES - ACEScg':\n               self.acesresult = True\n            else :\n                self.acesresult = False\n        return self.acesresult\n\n    def ocioChange(self,value):\n\n        ccOcio=not mc.colorManagementPrefs(q=True,cfe=True)\n        if value:\n            ccOcio=value\n        mc.colorManagementPrefs(e=True,cfe=ccOcio)\n        mAcesOn=ccOcio\n        mAcesOff=not ccOcio\n        if ccOcio:\n            iconCbOcio=\":/checkboxOn.png\"\n            bgcIcbOcio=bgcgreen2\n        else:\n            iconCbOcio=\":/checkboxOff.png\"\n            bgcIcbOcio=bgcred1\n\n        mc.iconTextButton(\"iconTextButtonUseOcio\",e=True,image=iconCbOcio,bgc=bgcIcbOcio)\n        self.updateAcesUi()\n\n    def ocioRule(self,ccv):\n        mc.colorManagementPrefs(e=True,ore=ccv)\n\n    def ocioRuleWind(*args):\n        mc.confirmDialog(title='OCIO Rule',message='If enabled ,a imported texture will be set automatically to the default colorspace set.   (You can set it to Utility-Raw by clicking on the right button)',defaultButton='OK',cancelButton='Cancel',dismissString='Cancel',icn=\"help\")\n\n    def ocioRuleChange(self):\n        if self.ocioCheck():\n            mc.colorManagementFileRules('Default',e=True,cs='Utility - Raw')\n            mc.colorManagementFileRules(save=True)\n            mc.colorManagementFileRules(load=True)\n        else:\n            print\"Ocio disabled, can't change Default Rule\"\n\n    def updateAcesUi(self):\n        mAcesOn=self.acesCheck()\n        mAcesOff=not self.acesCheck()\n        mc.flowLayout(\"lytFlowAcesOn\",e=True,m=mAcesOn)\n        mc.separator(\"separatorAcesOn\",e=True,m=mAcesOn)\n        mc.text(\"textColorAcesOn\",e=True,m=mAcesOn )\n        mc.text('textAcesOn',e=True,m=mAcesOn)\n\n        mc.flowLayout(\"lytFlowAcesOff\",e=True,m=mAcesOff)\n        mc.separator(\"separatorAcesOff\",e=True,m=mAcesOff)\n        mc.text(\"textColorAcesOff\",e=True,m=mAcesOff )\n        mc.text('textAcesOff',e=True,m=mAcesOff )\n        mc.iconTextButton('itbAcesOff',e=True,m=mAcesOff )\n\n    def idtUiUpdate(self):\n        valeur=mc.iconTextButton('itbIconTitle',q=True,image=True)\n        leWind=mc.window('%s' %WINDAN, q=True,le=True )\n        hWindO=mc.window('%s' %WINDAN, q=True,h=True )\n        if valeur==\":/nodeGrapherArrowDown.png\":\n            mV=False\n            iV=\":/moveUVRight.png\"\n            hLyt=33\n            hWind=hWindO-280\n        else:\n            mV=True\n            iV=\":/nodeGrapherArrowDown.png\"\n            hLyt=309\n            hWind=hWindO+280\n\n        mc.iconTextButton('itbIconTitle',e=True,image=iV)\n        mc.separator('idtSeparator1', e=True,m=mV )\n        mc.iconTextButton('idtItbIcon',e=True,m=mV )\n        mc.text('idtTextBttns',e=True,m=mV )\n        mc.separator('idtSeparator2',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns\",e=True,m=mV )\n        mc.separator('idtSeparator3',e=True,m=mV )\n        mc.text(\"textColorBttns0\",e=True,m=mV )\n        mc.iconTextButton('itbBttns0',e=True,m=mV )\n        mc.separator('idtSeparator4',e=True,m=mV )\n        mc.text(\"textColorBttns1\",e=True,m=mV )\n        mc.iconTextButton('itbBttns1',e=True,m=mV )\n        mc.separator('idtSeparator5',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutTxtBttns2\",e=True,m=mV )\n        mc.iconTextButton('itbIcon2',e=True,m=mV )\n        mc.text('textBttns2',e=True,m=mV )\n        mc.separator('idtSeparator6',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns2\",e=True,m=mV )\n        mc.separator('idtSeparator7',e=True,m=mV )\n        mc.text(\"textColorBttns2\",e=True,m=mV )\n        mc.iconTextButton('itbBttns2',e=True,m=mV )\n        mc.separator('idtSeparator8',e=True,m=mV )\n        mc.text(\"textColorBttns3\",e=True,m=mV )\n        mc.iconTextButton('itbBttns3',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns3\",e=True,m=mV )\n        mc.separator('idtSeparator9',e=True,m=mV )\n        mc.text(\"textColorBttns3\",e=True,m=mV )\n        mc.iconTextButton('itbBttns3',e=True,m=mV )\n        mc.separator('idtSeparator10',e=True,m=mV )\n        mc.text(\"textColorBttns4\",e=True,m=mV )\n        mc.iconTextButton('itbBttns4',e=True,m=mV )\n        mc.separator('idtSeparator11',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutTxtBttns32\",e=True,m=mV )\n        mc.iconTextButton('itbIcon32',e=True,m=mV )\n        mc.text('textBttns32',e=True,m=mV )\n        mc.separator('idtSeparator12',e=True,m=mV )\n        mc.flowLayout(\"flowLayoutBttns33\",e=True,m=mV )\n        mc.separator('idtSeparator13',e=True,m=mV )\n        mc.text(\"textColorBttns30\",e=True,m=mV )\n        mc.iconTextButton('itbBttns30',e=True,m=mV )\n        mc.separator('idtSeparator14',e=True,m=mV )\n        mc.text(\"textColorBttns31\",e=True,m=mV )\n        mc.iconTextButton('itbBttns31',e=True,m=mV )\n        mc.separator('idtSeparator15',e=True,m=mV )\n        mc.text(\"textColorBttns32\",e=True,m=mV )\n        mc.iconTextButton('itbBttns32',e=True,m=mV )\n        mc.rowColumnLayout(\"uiRowColLytSide2\", e=True,h=hLyt)\n        mc.window('%s' %WINDAN, e=True, h=hWind )\n        mc.window('%s' %WINDAN, e=True,le=leWind )\n\n    def helpUiUpdate(self,*args):\n        visState = mc.iconTextButton('itbBkmrkLinks', q=True,i=True)\n        hWindhelpO=mc.window('%s' %WINDAN, q=True,h=True )\n\n        if visState==':/nodeGrapherArrowDown.png':\n            itbImg=':/moveUVRight.png'\n            itbVis=False\n            hWindHelpN=hWindhelpO-100\n\n        elif visState==':/moveUVRight.png':\n            itbImg=':/nodeGrapherArrowDown.png'\n            itbVis=True\n            hWindHelpN=hWindhelpO+100\n            hLyt = 150\n\n        mc.rowColumnLayout(\"rclUiGlobalHelps\", e=True, vis=itbVis,m=itbVis )\n        mc.iconTextButton('itbBkmrkLinks', e=True,i=itbImg)\n        mc.window('%s' %WINDAN, e=True,h=hWindHelpN )\n\n\n    def getOcioPath(self):\n        self.ocioPath=mc.colorManagementPrefs(q=True,cfp=True)\n        return self.ocioPath\n\n    def fileDialogOcio(self):\n        self.ocioFile=mc.fileDialog2(fm=1)\n        mc.textField(\"textFieldOcio\",e=True,tx=self.ocioFile[0])\n\n        return self.ocioFile\n\n    def validateOcio(self,*args):\n        ocioPath=mc.textField(\"textFieldOcio\",q=True,tx=True)\n        mc.colorManagementPrefs(e=True,cme=True)\n        mc.colorManagementPrefs(e=True,cfp=ocioPath)\n        self.ocioChange(True)\n\n\n    def allTexCs(self,value):\n        tex_list= mc.ls(type='file')\n        if value==0:\n            text='ACEScg'\n        if value==1:\n            text='Utility-Raw'\n        if value==2:\n            text='Raw'\n        promptResult = mc.confirmDialog(title='Convert ALL textures',message='You are about to convert ALL the texture of your maya file to %s'%text,button=['OK', 'Cancel'],defaultButton='OK',cancelButton='Cancel',dismissString='Cancel',icn=\"warning\")\n        if promptResult=='OK':\n            for textures in tex_list:\n                if value==0:\n                    mc.setAttr('%s.colorSpace' %textures, \"ACES - ACEScg\", type=\"string\")\n                if value==1:\n                    mc.setAttr('%s.colorSpace' %textures, \"Utility - Raw\", type=\"string\")\n                if value==2:\n                    mc.setAttr('%s.colorSpace' %textures, \"Raw\", type=\"string\")\n        else :\n            print \"Conversion aborted by user\"\n\n    def csTex(self,value):\n        item_list = mc.ls( selection=True )\n        for things in item_list:\n            if value==0:\n                mc.setAttr('%s.colorSpace' %things, \"ACES - ACEScg\", type=\"string\")\n            if value==1:\n                mc.setAttr('%s.colorSpace' %things, \"Utility - Raw\", type=\"string\")\n            if value==2:\n                mc.setAttr('%s.colorSpace' %things, \"Utility - Linear - sRGB\", type=\"string\")\n            if value==3:\n                mc.setAttr('%s.colorSpace' %things, \"Utility - sRGB - Texture\", type=\"string\")\n            if value==4:\n                mc.setAttr('%s.colorSpace' %things, \"sRGB\", type=\"string\")\n            if value==5:\n                mc.setAttr('%s.colorSpace' %things, \"Raw\", type=\"string\")\n            if value==6:\n                mc.setAttr('%s.colorSpace' %things, \"Output - sRGB\", type=\"string\")\n            if value==7:\n                mc.setAttr('%s.colorSpace' %things, \"Raw\", type=\"string\")\n\n\n    def hyperLink(self,value):\n        if value==0:\n            os.startfile('https://github.com/colour-science/OpenColorIO-Configs/archive/feature/aces-1.2-config.zip')\n        if value==1:\n            os.startfile('https://acescentral.com/faq')\n        if value==2:\n            os.startfile('https://chrisbrejon.com/cg-cinematography/chapter-1-5-academy-color-encoding-system-aces/')\n        if value==3:\n            os.startfile('https://z-fx.nl/ColorspACES.pdf')\n        if value==4:\n            os.startfile('https://gumroad.com/liam_collod')\n        if value==5:\n            os.startfile('https://www.youtube.com/watch?v=ctCL0OhCGjk&list=PLK1rYEsZB6pu138crJeB4X3m94UCbtjuX')\n        if value==6:\n            os.startfile('https://twitter.com/MrLixm')\n        if value==7:\n            os.startfile('https://www.artstation.com/monsieur_lixm')\n\n    def helpWind(*args):\n        winshow=HelpUI()\n        winshow.showWindHelp()\n\n    def infoWind(*args):\n        winshow=InfoUI()\n        winshow.showWindInfo()\n\n\n    ###Close window function\n    def closeWind(*args):\n        mc.deleteUI('%s' %WINDAN, window=True)\n        if mc.window('infoUdimWind', query=True, exists=True):\n            mc.deleteUI('infoUdimWind', window=True)\n\n\n\n\n### UI FUNCTION\n\n\nclass AcesUI:\n\n    def __init__(self):\n\n        af=AcesFunctions()\n\n        cbRv=mc.colorManagementPrefs(q=True,ore=True)\n\n        if af.ocioResult==True:\n            cbv=True\n            iconCbOcio=\":/checkboxOn.png\"\n            bgcIcbOcio=bgcgreen2\n        else:\n            cbv=False\n            iconCbOcio=\":/checkboxOff.png\"\n            bgcIcbOcio=bgcred1\n\n        ####UI STYLE#####\n        windbgcR,windbgcG,windbgcB=0.2,0.2,0.2 #color of the background of the window\n        wGlobal=353\n        #BUTTON HEIGHT weight\n        hv=15\n        wv=30\n        #icontextbutton\n        hiv=25\n        wiv=25\n        ##--------------\n\n        self.windowv = mc.window('%s' %WINDAN, title=\" \", widthHeight=(wGlobal, 725), backgroundColor=(windbgcR,windbgcG,windbgcB), le=650,te=150,tbm=False,s=False)\n\n        mc.columnLayout( columnAttach=('both', 0), rowSpacing=10, columnWidth=wGlobal )\n        mc.text(label= \"   \", h = 3 , rs=True, backgroundColor=bgcblue  )\n        mc.setParent( '..' )\n\n        mc.rowColumnLayout(\"uiRowColLytSide1\", nc=4)\n        mc.separator( w=5, style='none' )\n        mc.iconTextButton(label= \"   \", w = 3 , bgc=bgcgreyl )\n        mc.separator( w=4, style='none' )\n\n        #fourth column\n        mc.rowColumnLayout(\"uiTopRowGlobal\", adj=True )\n\n\n        mc.rowLayout(\"rowlytName\",bgc=bgcblue,nc=4,cl4=[\"left\",\"left\",\"left\",\"left\"],h=29 )\n        mc.separator( w=2, style='none' )\n        mc.iconTextButton(st='iconOnly',label= \"   \", h = 20,w=20 ,i=':/info.png',command=af.infoWind )\n        mc.iconTextButton(st=af.stTitleState,label=' ACES Colorspace Utility %s' %VERSION, h = 22,w = 276, bgc=[0.204, 0.204, 0.21], al='left', fn='boldLabelFont' ,ebg=False,hlc=bgcgreen2,command=func.partial(af.hyperLink,4),i=af.imgTitlev,mw=5)\n        mc.iconTextButton(st='iconOnly',label= \"   \", h = 25,w=25 ,command=af.closeWind, backgroundColor=(bgcwhited),image=\":/error.png\",ebg=False  )\n        mc.setParent('..')\n\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2,w=170 , backgroundColor=(bgcwhited)  )\n        mc.separator( height=15, style='none' )\n\n\n    \t## Is aces enabled ? ##\n        # ACES ON UI #\n        self.uiAcesOn1=mc.flowLayout(\"lytFlowAcesOn\",m=af.mAcesOn)\n        self.uiAcesOn2=mc.separator(\"separatorAcesOn\", w=4,h=15, style='none' ,m=af.mAcesOn)\n        self.uiAcesOn3=mc.text(\"textColorAcesOn\",label= \"   \", w = 5 , rs=False, backgroundColor=(0.08, 0.76, 0.3) ,m=af.mAcesOn )\n        self.uiAcesOn4=mc.text('textAcesOn',label= '  ACES is enabled', al='left', fn='obliqueLabelFont' , rs=False ,m=af.mAcesOn)\n        mc.setParent( '..' )\n\n        # ACES OFF UI #\n        htxtAcesOff=15\n        self.uiAcesOff1=mc.flowLayout(\"lytFlowAcesOff\",m=af.mAcesOff)\n        self.uiAcesOff2=mc.separator(\"separatorAcesOff\", w=4, style='none' ,m=af.mAcesOff)\n        self.uiAcesOff3=mc.text(\"textColorAcesOff\",label= \"   \", w = 5,h=htxtAcesOff , rs=False, backgroundColor=(bgcred2) ,m=af.mAcesOff)\n        self.uiAcesOff4=mc.text('textAcesOff',label= \"   ACES is not enabled \",h=htxtAcesOff,fn='obliqueLabelFont', al='left' , rs=False, backgroundColor=(0.3, 0.3, 0.3) ,m=af.mAcesOff,ebg=False )\n        self.uiAcesOff5=mc.iconTextButton('itbAcesOff',st='iconOnly', h = 13,w=13 , backgroundColor=(bgcgrey),image=\":/caution.png\",ebg=True,m=af.mAcesOff  )\n        mc.setParent( '..' )\n\n\n\n        mc.separator( height=20, style='none' )\n\n        #########################\n        # CheckBox OCIO #\n        mc.rowLayout(\"rowlytOcio\",bgc=(bgcgreyl),nc=3,cl3=[\"center\",\"center\",\"left\"])\n        mc.separator( w=2,h=25, style='none' )\n        mc.iconTextButton(\"iconTextButtonUseOcio\",st='iconOnly',label= \"   \", h = 20,w=20 ,command=func.partial(af.ocioChange,False), backgroundColor=(bgcIcbOcio),image=iconCbOcio,ebg=True  )\n        mc.text('textUseOcio',label= \" USE OCIO\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator( height=8, style='none' )\n        #################################\n\n\n        ## OCIO LOADING UI ##\n        mc.rowColumnLayout(\"rowCLOcio\", nc=3)\n        mc.separator( w=2, style='none' )\n        mc.text(label= \"   \", w = 2 , rs=False, backgroundColor=(bgcwhited)  )\n        # Third column\n        mc.rowColumnLayout(\"uiTopRowGlobal\", adj=True )\n\n        mc.rowLayout(\"rowlytField\",nc=2,cl2=[\"center\",\"center\"],ct2=[\"both\",\"left\"],co2=[5,0])\n        mc.iconTextButton('itbFolder',st='iconOnly', h = 20,w=20 ,command=af.fileDialogOcio, backgroundColor=(bgcgrey),image=\":/folder-open.png\",ebg=True )\n        ocioPathField = mc.textField(\"textFieldOcio\", ann=\"path of the .ocio\" , font = \"obliqueLabelFont\", h= 20,w= 280,bgc=(bgcgreyd),tx=af.ocioPath)\n        mc.setParent( '..' )\n\n        mc.rowLayout(\"rowlytOcio\",bgc=(bgcgreyl),nc=2,cl2=[\"left\",\"right\"],cw2=[229,50],ebg=False)\n\n        mc.rowColumnLayout(\"uiTopRowGlobal\", adj=True )\n        mc.text('textOcioPath',label= \"   1.Set the path to config.ocio\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.text('textOcioPathVal',label= \"   2.Load after selecting the config.ocio\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.button(label='LOAD', h =25,w = 80, bgc=(bgcgreyd),command=af.validateOcio)\n        mc.setParent( '..' )\n\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n\n\n        ######################\n        # CheckBox OCIO RULE #\n        mc.separator( height=12, style='none' )\n        mc.rowLayout(\"rowlytOcioRule\",bgc=(bgcgreyl),nc=5,cl5=[\"center\",\"center\",\"right\",\"center\",\"center\"],ct5=[\"both\",\"both\",\"both\",\"right\",\"right\"],co5=[0,0,12,0,0])\n        mc.separator( w=2,h=25, style='none' )\n        mc.checkBox(\"checkBoxOcioRule\", label='OCIO Rule',v=cbRv,cc=af.ocioRule )\n        mc.iconTextButton('itbHelp',st='iconOnly', h = 20,w=20 ,ann='If enabled , a texture will be set to the default colorspace you choose', backgroundColor=(bgcgrey),image=\":/help.png\",ebg=False,command=af.ocioRuleWind )\n        mc.iconTextButton('itbOrtxt',st='textOnly', h = 20,w=110 ,label='Set Default OcioRule to:', backgroundColor=(bgcgrey),ebg=False,fn=\"tinyBoldLabelFont\" )\n        mc.iconTextButton('itbOrtxtCs',st='textOnly', h = 18,w=80 ,label='Utility - Raw',command=af.ocioRuleChange, backgroundColor=(bgcgreyd),ebg=True,fn=\"tinyBoldLabelFont\" )\n\n        mc.setParent( '..' )\n\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2,w=150 , backgroundColor=(bgcblue)  )\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n        mc.separator( w=8, style='none' )\n\n\n\n\n\n\n\n\n############################################################################################################\n        ## SEPARATOR WHITE ##\n\n        mc.rowColumnLayout(\"uiRowColLytSide2\", nc=3,h=308)\n        mc.separator( w=2, style='none' )\n        mc.text(\"idtTxtLineSide\",label= \"   \", w = 2 , rs=False, backgroundColor=(bgcgreyl)  )\n        ##################\n        ## BUTTONS ##\n        ##################\n        mc.rowColumnLayout(\"uiTopRowGlobalButtons\", adj=True )\n\n\n\n        mc.rowColumnLayout(\"uiRowColLytTitle\", nc=2)\n        mc.text(label= \"   \",h=30, w = 4 , rs=False, backgroundColor=(bgcblue)  )\n        mc.rowLayout(\"rowlytTitle\",bgc=(bgcdarkl),nc=2,cl2=[\"left\",\"left\"],h=30)\n        mc.iconTextButton('itbIconTitle',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/nodeGrapherArrowDown.png\",ebg=False,command=af.idtUiUpdate,ann=\"Open/Close Menu\")\n        mc.text('textTitleFile',label=\"CHANGE FILES NODE COLORSPACE (IDT)\",fn='boldLabelFont',w=wGlobal-43,al=\"left\")\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n\n        mc.separator('idtSeparator1', h=15, style='none' )\n\n\n        # UI STYLE #\n        wSepLnk=2\n        hBttnsCs=40\n        stItbCs=\"iconAndTextCentered\" #iconAndTextCentered\n        alItbCs=\"left\"\n        imgItbCs=\":/\"#\":/teUnexpandableRowBackground.png\"\n        loItbCs=5\n        ebgItbCs=False\n        bgcTxtCs=bgcpurple\n\n        #################\n        # BUTTONS ROW 1 #\n        #################\n        mc.flowLayout(\"idtFlowLayoutTxtBttns\",h=20)\n        mc.iconTextButton('idtItbIcon',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/out_displayLayer.png\",ebg=True)\n        mc.text('idtTextBttns',label= \"Convert ALL the files nodes:\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator2', h=3, style='none' )\n\n        mc.flowLayout(\"flowLayoutBttns\")\n        mc.separator('idtSeparator3', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns0\",label= \" \", w = 3,h=hBttnsCs-5, rs=False, backgroundColor=(bgcred1))\n        mc.iconTextButton('itbBttns0',st=stItbCs,label='  ALL ACEScg',fn='smallBoldLabelFont', h = hBttnsCs-5,w=150 ,command=func.partial(af.allTexCs,0), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator4', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns1\",label= \" \", w = 3,h=hBttnsCs-5, rs=False, backgroundColor=(bgcred1))\n        mc.iconTextButton('itbBttns1',st=stItbCs,label='  ALL Utility-Raw',fn='smallBoldLabelFont', h = hBttnsCs-5,w=150 ,command=func.partial(af.allTexCs,1), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator5', h=5, style='none' )\n\n\n\n        ###################\n        # BUTTONS ROW 2.1 #\n        ###################\n        mc.flowLayout(\"flowLayoutTxtBttns2\",h=20)\n        mc.iconTextButton('itbIcon2',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/imageDisplay.png\",ebg=True)\n        mc.text('textBttns2',label= \"Convert the selected files nodes:\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator6', h=3, style='none' )\n\n        mc.flowLayout(\"flowLayoutBttns2\")\n        mc.separator('idtSeparator7', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns2\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcpurpleF))\n        mc.iconTextButton('itbBttns2',st=stItbCs,label='  ACEScg',fn='smallBoldLabelFont', h = hBttnsCs,w=120 ,command=func.partial(af.csTex,0), backgroundColor=(bgcpurple),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator8', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns3\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcyellow))\n        mc.iconTextButton('itbBttns3',st=stItbCs,label='  Utility-Raw',fn='smallBoldLabelFont', h = hBttnsCs,w=100 ,command=func.partial(af.csTex,1), backgroundColor=(bgcpurple),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator9v2', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns3v2\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcgreenUVo))\n        mc.iconTextButton('itbBttns3v2',st=stItbCs,label='  Output sRGB',fn='smallBoldLabelFont', h = hBttnsCs,w=100 ,command=func.partial(af.csTex,6), backgroundColor=(bgcpurple2),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparatortest',h=2, style='none' )#TEST SEPRATOR\n\n        # BUTTONS ROW 2.2 #\n        mc.flowLayout(\"flowLayoutBttns3\")\n        mc.separator('idtSeparator9', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns3\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcgreenUVo))\n        mc.iconTextButton('itbBttns3',st=stItbCs,label='  Utility-Linear-sRGB',fn='smallBoldLabelFont', h = hBttnsCs,w=120 ,command=func.partial(af.csTex,2), backgroundColor=(bgcpurple2),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator10', w=wSepLnk,h=hBttnsCs, style='none' )\n        mc.text(\"textColorBttns4\",label= \" \", w = 3,h=hBttnsCs, rs=False, backgroundColor=(bgcgreenUVo))\n        mc.iconTextButton('itbBttns4',st=stItbCs,label='  Utility-sRGB-Texture',fn='smallBoldLabelFont', h = hBttnsCs,w=150 ,command=func.partial(af.csTex,3), backgroundColor=(bgcpurple2),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator11', h=20, style='none' )\n\n        #################\n        # BUTTONS ROW 3 #\n        #################\n        mc.flowLayout(\"flowLayoutTxtBttns32\")\n        mc.iconTextButton('itbIcon32',st='iconOnly', h = 18,w=18 , backgroundColor=(bgcgrey),image=\":/out_file.png\",ebg=True)\n        mc.text('textBttns32',label= \"Default colorManagement Options\",h=15,fn='smallBoldLabelFont', al='left' ,rs=False, bgc=(0.3, 0.3, 0.3) ,ebg=False )\n        mc.setParent( '..' )\n\n        mc.separator('idtSeparator12', h=5, style='none' )\n\n        mc.flowLayout(\"flowLayoutBttns33\")\n        mc.separator('idtSeparator13', w=wSepLnk,h=hBttnsCs-20, style='none' )\n        mc.text(\"textColorBttns30\",label= \" \", w = 3,h=hBttnsCs-20, rs=False, backgroundColor=(bgcblueSea))\n        mc.iconTextButton('itbBttns30',st=stItbCs,label='  ALL to Raw',fn='smallBoldLabelFont', h = hBttnsCs-20,w=100 ,command=func.partial(af.allTexCs,2), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator14', w=wSepLnk, style='none' )\n        mc.text(\"textColorBttns31\",label= \" \", w = 3,h=hBttnsCs-20, rs=False, backgroundColor=(bgcblueSea))\n        mc.iconTextButton('itbBttns31',st=stItbCs,label='  sRGB',fn='smallBoldLabelFont', h = hBttnsCs-20,w=100 ,command=func.partial(af.csTex,4), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.separator('idtSeparator15', w=wSepLnk,h=hBttnsCs-20, style='none' )\n        mc.text(\"textColorBttns32\",label= \" \", w = 3,h=hBttnsCs-20, rs=False, backgroundColor=(bgcblueSea))\n        mc.iconTextButton('itbBttns32',st=stItbCs,label='  Raw',fn='smallBoldLabelFont', h = hBttnsCs-20,w=80 ,command=func.partial(af.csTex,5), backgroundColor=(bgcpurpleR),al=alItbCs,lo=loItbCs,ebg=ebgItbCs)\n        mc.setParent( '..' )\n\n\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n        mc.setParent( '..' )\n\n\n\n\n##########################################################################################\n        ##################\n        ## USEFUL LINKS ##\n        ##################\n\n        stItbLink=\"iconAndTextHorizontal\"\n        imgItbLink=\":/out_genericConstraint.png\"\n\n        mc.rowColumnLayout(\"uiTopRowGlobalLinks\", adj=True )\n        mc.separator( h=15, style='none' )\n\n        mc.flowLayout(\"flowLayoutTxtLinks\",h=25,bgc=bgcgreyl)\n        mc.text(\"textColorLinks0\",label= \" \", w = 3,h=25, rs=False, bgc=bgcblue)\n        mc.iconTextButton('itbBkmrkLinks',st='iconOnly', h = 25,w=20 ,image=\":/nodeGrapherArrowDown.png\",c=af.helpUiUpdate)\n        mc.iconTextButton('textUsflLinks',st='textOnly',label= \"ACES HELP\",h=25,fn='smallBoldLabelFont',c=af.helpUiUpdate)\n        mc.setParent( '..' )\n\n        wSepLnk=2\n        mc.separator( h=5, style='none' )\n        mc.rowColumnLayout(\"rclUiGlobalHelps\", adj=True )\n\n        # LINKS ROW 1 #\n\n\n        mc.flowLayout(\"flowLayoutLinks\")\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks0\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreen2))\n        mc.iconTextButton('itbAcesLink',st=stItbLink,label='DOWNLOAD ACESv1.2 ',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,0), backgroundColor=(bgcpurpleR),ebg=False,image=imgItbLink )\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks1\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreyl))\n        mc.iconTextButton('itbAcesLink2',st=stItbLink,label='ACES CENTRAL FAQ',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,1), backgroundColor=(bgcpurple),ebg=False,image=imgItbLink)\n        mc.setParent( '..' )\n\n        mc.separator(h=3,style='none')\n\n\n        # LINKS ROW 2 #\n        mc.flowLayout(\"flowLayoutLinks2\")\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks2\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreyl))\n        mc.iconTextButton('itbAcesLink2.1',st=stItbLink,label='Chris Brejon Book',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,2), backgroundColor=(bgcpurple2),ebg=False,image=imgItbLink)\n        mc.separator( w=wSepLnk,h=25, style='none' )\n        mc.text(\"textColorLinks3\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcgreyl))\n        mc.iconTextButton('itbAcesLink2.2',st=stItbLink,label='W.Zwarthoed ACES PDF',fn='smallBoldLabelFont', h = 25,w=150 ,command=func.partial(af.hyperLink,3), backgroundColor=(bgcpurple2),ebg=False,image=imgItbLink)\n        mc.setParent( '..' )\n\n        mc.separator( h=5, style='none' )\n\n        #LINKS ROW 3 #\n        mc.rowLayout(\"flowLayoutLinks3\",nc=6,bgc=bgcgreyl)\n        mc.separator( w=1,h=25, style='none' )\n        mc.text(\"textColorLinks3\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcred2))\n        mc.iconTextButton('itbAcesLink3',st=stItbLink,label='Quick ACES Help',fn='smallBoldLabelFont', h = 25,w=150 ,command=af.helpWind, backgroundColor=(bgcpurple2),ebg=False,image=\":/help.png\")\n        mc.separator( w=1,h=25, style='none' )\n        mc.text(\"textColorLinks4\",label= \" \", w = 3,h=25, rs=False, backgroundColor=(bgcred2))\n        mc.iconTextButton('itbAcesLink4',st=stItbLink,label='Youtube ACES Tuto',fn='smallBoldLabelFont', h = 30,w=150 ,command=func.partial(af.hyperLink,5), backgroundColor=(bgcpurple2),ebg=False,image=af.imgYtb)\n        mc.setParent( '..' )\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 4,w=150 , backgroundColor=(bgcblue)  )\n\n\n        mc.setParent( '..' )#END rclUiGlobalLinks\n        mc.setParent('..')\n\n        mc.setParent('..')\n\n\n        af.idtUiUpdate()\n        # af.helpUiUpdate()\n\n\n    def showWind(self):\n        mc.showWindow(self.windowv)\n\nclass HelpUI:\n    def __init__(self):\n\n        if mc.windowPref('AcesQuickHelp', query=True, exists=True):\n            mc.windowPref('AcesQuickHelp', remove=True )\n        if mc.window('AcesQuickHelp', query=True, exists=True):\n            mc.deleteUI('AcesQuickHelp', window=True)\n\n\n        windbgcR,windbgcG,windbgcB=0.2,0.2,0.2 #color of the background of the window\n\n        self.windHelp = mc.window('AcesQuickHelp', title=\" \", widthHeight=(500, 760), backgroundColor=(windbgcR,windbgcG,windbgcB), le=750,te=25,s=True)\n\n        mc.rowColumnLayout(\"uiHelpRclGlobal\", adj=True )\n        mc.separator( h=5, style='none' )\n\n        mc.rowColumnLayout(\"uiHelpRclSide1\", nc=4)\n        mc.separator( w=5, style='none' )\n        mc.text(label= \"   \", w = 2 , rs=False, backgroundColor=(bgcblue)  )\n        mc.separator( w=5, style='none' )\n\n        mc.rowColumnLayout(\"uiHelpRclInside\", adj=True ) #third column\n\n        hTitle=30\n        mc.flowLayout(\"uiHelpFlowLayoutTop\")\n        mc.text(\"textColorAcesOff\",label= \"   \", w = 5,h=hTitle, bgc=(bgcblue))\n        mc.iconTextButton(label=\" QUICK ACES HELP GUIDE   \",fn=\"boldLabelFont\",al=\"left\",h=hTitle,bgc=bgcgreyl,st=\"iconAndTextHorizontal\",i=\":/info.png\")\n        mc.setParent('..')\n\n        hSepTxt=5 #hauteur interligne\n        mc.separator( h=10, style='none' )\n        mc.text(label=\"Which Colorspace to Choose ?\",fn=\"boldLabelFont\",al=\"left\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(label=\"Is your texture a 'Color'Map ? (Albedo/BaseColor/Translucency/SubsurfaceColor/...)\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.rowColumnLayout(\"uiHelpRclColor\", adj=True )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Is your texture in a linear format (.exr,...)?\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to Utility - Linear - sRGB\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Is your texture in a 8/16bit format (.jpg,.png,.tiff,...)?\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to Utility - sRGB - Texture\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.setParent('..') #End\n        mc.setParent('..') #End\n\n\n\n        ################### DATA\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"Is your texture a 'Data'Map ? (Roughness,Normal,Bump,Displacement,Specular,...)\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to Utility - Raw\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.setParent('..') #End\n\n        ################### HDRI\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"Is your texture a HDRI (.hdr,.exr)\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.rowColumnLayout(\"uiHelpRclHdri\", adj=True )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Your HDRI has to be converted to ACEScg if you want it displayed correctly\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Use Nuke,Natron,Houdini,... to convert it then set it to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/saveGeneric.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"You can't convert it ?:\",fn=\"plainLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Then set it to Utility - Raw\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/out_envBall.png\")\n        mc.setParent('..') #End\n        mc.setParent('..') #End\n\n\n        ################### ACES\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"Has your texture already been converted to ACEScg ?\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.iconTextButton(label=\"     (or you worked in ACEScg when creating them(ex:Mari))\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.rowLayout(nc=2)\n        mc.separator( w=15, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      Set it to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/imageDisplay.png\")\n        mc.setParent('..') #End\n\n        ################### oUTPU Srgb\n\n\n        mc.separator( h=hSepTxt+10, style='none' )\n        mc.iconTextButton(label=\"What is Output - sRGB for ?\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/help.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.separator( w=15, style='none' )\n        mc.rowColumnLayout(nr=2)\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"Using Utility-sRGB-Texture as an IDT will darken your texture (this is a normal behavior)\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      If you really want to preserve the color of your original of your file you can use this IDT\",fn=\"obliqueLabelFont\",al=\"left\")\n\n        mc.setParent('..') #End\n\n        ################### REDSHIFT\n\n        mc.separator( h=20, style='none' )\n        mc.iconTextButton(st='iconAndTextHorizontal',label=\"Are you using Redshift to render ?\",fn=\"boldLabelFont\",al=\"left\",i=\":/rvRedChannel\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(label=\"Redshift doesn't fully support Ocio, changing colorspace on nodes will not work\",st=\"iconAndTextHorizontal\",fn=\"plainLabelFont\",al=\"left\",i=\":/info.png\")\n        mc.separator( h=hSepTxt, style='none' )\n\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"      So you have to convert your textures to ACEScg before in Nuke,Natron,...\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_norgie_close.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"     Albedo/BaseColor/Translucency/SubsurfaceColor/... to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"     NormalMap don't have to be converted if you use the RS NormalMap node \",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n        mc.separator( h=hSepTxt, style='none' )\n        mc.iconTextButton(st=\"iconAndTextHorizontal\",label=\"     Greyscale/Data maps (roughness,metalness,...) can be converted whether or not to ACEScg\",fn=\"obliqueLabelFont\",al=\"left\",i=\":/clip_poseoffset.png\")\n\n\n\n\n\n\n\n\n        mc.setParent('..') #End rowColumnLayout\"uiHelpRclInside\" adj=True\n\n        mc.setParent('..') #End rowColumnLayout\"uiHelpRclSide1\" nc=3\n        mc.setParent('..')\n\n    def showWindHelp(self):\n        mc.showWindow(self.windHelp)\n\nclass InfoUI:\n    def __init__(self):\n\n        if mc.windowPref('infoUdimWind', query=True, exists=True):\n            mc.windowPref('infoUdimWind', remove=True )\n        if mc.window('infoUdimWind', query=True, exists=True):\n            mc.deleteUI('infoUdimWind', window=True)\n\n        af = AcesFunctions()\n\n        windbgc=0.2,0.2,0.2 #color of the background of the window\n\n        self.windInfo = mc.window('infoUdimWind', title=\"Info\", widthHeight=(290, 200), backgroundColor=windbgc, tlc=[250,450],te=25,s=True,mnb=False,mxb=False,i=False)\n\n\n        mc.rowColumnLayout(\"rclInfoGlobal\", adj=True)\n\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2, backgroundColor=bgcgreenM  )\n        mc.separator( h=15, style='none' )\n        mc.text(l='<font color=#00f58a><h3>This tool was made by LiamCollod<h3></font>',h=15)\n        mc.text(l='<font <h5>mail pro: <i>lcollod@gmail.com<i><h5></font>',h=35)\n\n\n        mc.rowColumnLayout(\"rclInfoSep\", nc=3)\n        mc.separator( w=10, style='none' )\n        mc.iconTextButton(st='iconOnly',bgc=bgcwhite,w=3)\n\n        mc.rowColumnLayout(\"rclInfo2ndCol\", nc=1,cal=[1,'left'])\n        mc.text(label=' > The IDT functions were mainly made for Arnold',fn='smallBoldLabelFont',h=16)\n        mc.text(label=\"    as REDSHIFT doesn't support file nodes IDT\",fn='smallBoldLabelFont',h=16)\n        # mc.text(label=' > The script can take some time if your scene is big',fn='smallBoldLabelFont',h=16)\n        mc.setParent('..')\n        mc.setParent('..')\n\n        mc.separator( h=5, style='none' )\n\n        mc.rowColumnLayout(\"rclInfoSep2\", nc=3)\n        mc.separator( w=10, style='none' )\n        mc.iconTextButton(st='iconOnly',bgc=bgcwhite,w=3)\n\n        mc.rowColumnLayout(\"rclInfo2ndCol2\", adj=True)\n        stItbLink=\"iconAndTextHorizontal\"\n        imgItbLink=\":/out_genericConstraint.png\"\n        mc.iconTextButton(st=stItbLink,label='GUMROAD LINK',fn='smallBoldLabelFont',i=imgItbLink,c=func.partial(af.hyperLink,4))\n        mc.iconTextButton(st=stItbLink,label='TWITTER LINK',fn='smallBoldLabelFont',i=imgItbLink,c=func.partial(af.hyperLink,6))\n        mc.iconTextButton(st=stItbLink,label='ARTSTATION LINK',fn='smallBoldLabelFont',i=imgItbLink,c=func.partial(af.hyperLink,7))\n        mc.setParent('..')\n\n\n        mc.setParent('..')\n        mc.text(l='<font <h5>You find a bug ? Submit it to <i>monsieurlixm@gmail.com<i><h5></font>',h=35)\n        mc.iconTextButton(st='textOnly',label= \"   \", h = 2, backgroundColor=bgcwhite  )\n\n        mc.setParent('..')\n\n    def showWindInfo(self,*args):\n        mc.showWindow(self.windInfo)\n\n\n\n\nwinshow= AcesUI()\nwinshow.showWind()\n\naftmp=AcesFunctions()\naftmp.helpUiUpdate()\n\n\n########END CODE\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
